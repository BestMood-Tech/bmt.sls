# ================== Security =====================

initialization:
  handler: security/handler.initialization
  description: create CA for chage refresh token period
  tags:
    client: ${file(env.yml):${opt:stage, self:provider.stage}.CLIENT}
  timeout: 28
  events:
    - http:
        path: api/security/initialization
        method: get
        integration: lambda
        cors: true
        response:
          headers:
            Access-Control-Allow-Origin: "'*'"
            Content-Type: "'application/json'"
          template: $input.json('$')

refreshToken:
  handler: security/handler.refreshToken
  description: refresh tokens in CA and WH every N hours
  tags:
    client: ${file(env.yml):${opt:stage, self:provider.stage}.CLIENT}
  timeout: 28
  events:
    - http:
        path: api/security/refresh-token
        method: get
        integration: lambda
        cors: true
        response:
          headers:
            Access-Control-Allow-Origin: "'*'"
            Content-Type: "'application/json'"
          template: $input.json('$')

invalidateTokens:
  handler: security/handler.invalidateTokens
  description: invalidate tokens in from CA and WH
  tags:
    client: ${file(env.yml):${opt:stage, self:provider.stage}.CLIENT}
  timeout: 28
  events:
    - http:
        path: api/security/invalidate-tokens
        method: post
        integration: lambda
        cors: true
        response:
          headers:
            Access-Control-Allow-Origin: "'*'"
            Content-Type: "'application/json'"
          template: $input.json('$')
